# for a list of available software on the different virtual environments, please see:
# https://github.com/actions/virtual-environments/tree/main/images

name: workflow ci
on: [push, pull_request]

jobs:

  #checks if src/dotnet files have changed
  check_dotnet:
    name: check src/dotnet
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: check changed files
        uses: tj-actions/changed-files@v6.3
        id: changed-files
        with:
          files: src/dotnet

  #checks if src/bindings have changed
  check_bindings:
    name: check src/bindings
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: check changed files
        uses: tj-actions/changed-files@v6.3
        id: changed-files
        with:
          files: |
            src/bindings
            src/CMakeLists.txt

  #only run if src files have changed.

  build_js:
    name: build rhino3dm.js
    needs: check_bindings
    if: needs.check_bindings.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk:2.0.10
    steps:
      - name: info
        run: python3 --version && emcc --version && cmake --version
      - name: checkout
        uses: actions/checkout@v2
      - name: update submodules
        run: git submodule update --init
      - name: bootstrap
        run: python3 script/bootstrap.py -p js
      - name: setup
        run: python3 script/setup.py -p js -o -v
      - name: build js
        run: python3 script/build.py -p js -o -v
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          path: src/build/javascript/artifacts_js
          name: rhino3dm.js

# 2021.05.31 macos-11 still in private preview:
# https://github.com/actions/virtual-environments/issues/2486

  build_py_all_bdist:
    name: build python ${{ matrix.python-version }} ${{ matrix.target }} bdist
    runs-on: ${{ matrix.os }}
    needs: check_bindings
    if: needs.check_bindings.outputs.any_changed == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [2.7, 3.9]
        include:
          - os: ubuntu-latest
            target: linux
          - os: windows-latest
            target: windows
          - os: macos-latest
            target: macos
        exclude:
          - os: macos-latest
            python-version: 2.7
          - os: windows-latest
            python-version: 2.7
    steps:
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: info
        run: python --version && cmake --version
      - name: install dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: checkout
        uses: actions/checkout@v2
      - name: update submodules
        run: git submodule update --init
      - name: build python ${{ matrix.python-version }} ${{ matrix.os }}
        run: python setup.py bdist_wheel
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          path: dist
          name: rhino3dm.py ${{ matrix.python-version }} ${{ matrix.os }}

  build_dotnet:
    name: build dotnet
    runs-on: ubuntu-latest
    needs: check_dotnet
    if: needs.check_dotnet.outputs.any_changed == 'true'
    steps:
      - name: info
        run: python3 --version && cmake --version && dotnet --version && git --version
      - name: checkout
        uses: actions/checkout@v2
      - name: update submodules
        run: ls && git submodule update --init
      - name: bootstrap
        run: python3 script/bootstrap.py -p linux
      - name: setup
        run: python3 script/setup.py -p linux -v
      - name: build dotnet
        run: python3 script/build.py -p linux -v
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          path: src/build/linux/dotnet/Rhino3dm.dll
          name: rhino3dm.net